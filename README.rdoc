= Railstar

== generator

=== install
初期設定ファイルを配置

=== scaffold
確認画面付きscaffold

  rails generate railstar:scaffold NAME [field[:type] field[:type]] [options]
  rails g railstar:scaffold article title:string body:text

モデルは作らない。コントローラとビューのみ生成

== CodeHolder
RAILS_ROOT/resources/code配下にcsvを配置することで定数を管理することができる。

例）RAILS_ROOT/resources/code/blood_type.csv
  title,血液型
  #DATA
  key,value,position,name,hoge
  A,a,1,A型,三角
  B,b,2,B型,台形
  AB,ab,3,AB型,星形
  O,o,4,O型,丸

key,value,position,name 必須

  > C.blood_type.A => "a"
  > C.blood_type.A.name => "A型"
  > C.blood_type["a"] => "a"
  > C.blood_type["a"].key => "A"
  > C.blood_type["a"].name => "A型"
  > C.blood_type["a"].hoge => "三角"

この後に任意の項目を付け足すことが可能（上記例ではhoge）

このセレクトボックスを作りたければ

  <%= f.select :blood_type, C.blood_types.to_opt, :include_blank => "選択してください"  %>

CSVのpositionカラムの数字を入れ替えることで、セレクトボックスの順番を変えることも可能

== ページ毎の<head>要素コントロール
layoutファイルにおいて、
  <head>
    <title><%= yield :title %></title>
    <%= stylesheet_link_tag "application", :media => "all" %>
    <%= javascript_include_tag "application" %>
    <%= csrf_meta_tags %>
    <%= yield :head %>
  </head>

としておくことで、各viewで、

  <% title "ページタイトル" %> タイトル設定
  <% stylesheet "hoge", "fuga" %> そのviewのみでhoge.cssとfuga.cssを読み込む
  <% javascript "hoge", "fuga" %> そのviewのみでhoge.jsとfuga.jsを読み込む

など、各viewから、親となるlayoutファイルのhead要素を追加することができる



== 開発サポート
config/routes.rbに以下の１行を記載することで、アプリケーション内の定数やルーティングを閲覧することができる

  mount Railstar::Engine => "/railstar"

現在はproductionでも見れているので注意
